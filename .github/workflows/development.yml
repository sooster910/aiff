name: Deploy to Staging

on:
  push:
    branches:
      - develop

env:
  AWS_REGION: ap-northeast-2
  EB_APPLICATION_NAME: aiff-front
  EB_ENVIRONMENT_NAME: production-aiff-front-docker

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 환경 변수 파일 생성
      - name: Create env file
        # secrets.ENV_DEVELOPMENT의 전체 내용을 .env.development 파일로 생성
        run: echo "${{ secrets.ENV_DEVELOPMENT }}" > .env.development

      # Docker 빌드
      - name: Build Docker image
        run: |
          docker build -t aiff-staging .
          docker save aiff-staging:latest > docker-image.tar

      # 배포 패키지 생성
      - name: Generate deployment package
        run: |
          mkdir -p deploy
          cp docker-image.tar deploy/
          cd deploy
          echo "container_commands:" > Dockerrun.aws.json
          echo "  00_load_image:" >> Dockerrun.aws.json
          echo "    command: docker load -i docker-image.tar" >> Dockerrun.aws.json
          echo "  01_run_container:" >> Dockerrun.aws.json
          echo "    command: docker run -d -p 8080:8080 aiff-staging:latest" >> Dockerrun.aws.json
          zip -r ../deploy.zip .

      # Elastic Beanstalk 배포
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ env.EB_APPLICATION_NAME }}
          environment_name: ${{ env.EB_ENVIRONMENT_NAME }}
          version_label: "ver-${{ github.sha }}"
          region: ${{ env.AWS_REGION }}
          deployment_package: deploy.zip
          wait_for_deployment: true