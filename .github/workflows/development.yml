name: Deploy to Development

on:
  push:
    branches:
      - develop # develop 브랜치에 push될 때 실행
      - main

jobs:
  # Playwright 테스트
  playwright-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm install -g yarn && yarn
      - name: Install Playwright Browsers
        run: yarn playwright install --with-deps
      - name: Run Playwright tests
        run: yarn playwright test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  deploy:
    runs-on: ubuntu-latest
    needs: playwright-tests # playwright-tests job이 성공한 후 실행됨
    steps:
      - uses: actions/checkout@v2
        # Node.js 설정
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile
          ls -la node_modules/.bin/next  # next 바이너리 존재 확인
          ls -la node_modules/next      # next 모듈 존재 확인
      # Relay 컴파일
      - name: Run Relay compiler
        run: |
          yarn relay

      #build
      - name: Build
        run: |
          yarn build
          # 빌드 결과물 확인
          ls -la .next
        # 빌드 실패 시 바로 종료하고 이후 작업을 진행하지 않음
        continue-on-error: false


      # remove node_modules
      - name: remove node_modules
        run: rm -rf node_modules

      # Grant execute permissions to hooks
      - name: Grant execute permissions to hooks
        run: chmod +x .platform/hooks/prebuild/01_yarn_install.sh

      # check aws credential
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # zip
      - name: Generate deployment package
        run: |
          zip -r deploy.zip . -x "*.git*"
      #          unzip -l deploy.zip | grep next  # zip 파일 내용 확인
      # deploy
      - name: Deploy to EB (Develop)
        if: github.ref == 'refs/heads/develop'
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: aiff-front
          environment_name: develop-aiff-front
          version_label: ${{ github.sha }}
          region: ap-northeast-2
          deployment_package: deploy.zip

      - name: Deploy to EB (Production)
        if: github.ref == 'refs/heads/main' # main 브랜치일 때 실행
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: aiff-front # main에 대한 application_name
          environment_name: production-aiff-front # main 환경
          version_label: ${{ github.sha }}
          region: ap-northeast-2
          deployment_package: deploy.zip
